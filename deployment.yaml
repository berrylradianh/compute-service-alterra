apiVersion: v1
kind: Namespace
metadata:
  name: production

---
apiVersion: v1
kind: Service
metadata:
  name: compute-service
  namespace: production
  labels:
    app: compute-service
spec:
  selector:
    app: compute-service
  ports:
  - port: 8080
    name: http
    targetPort: 8080
  type: NodePort

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: compute-service
  namespace: production
spec:
  selector:
    matchLabels:
      app: compute-service
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: compute-service
    spec:
      containers:
      - name: compute-service
        image:  us.gcr.io/$PROJECT_ID/production/compute-service:$SHORT_SHA
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: compute-service
        resources:
          requests:
            cpu: 50m

---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: compute-service
  namespace: production
spec:
  maxReplicas: 10
  minReplicas: 3
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: compute-service
  targetCPUUtilizationPercentage: 100

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: compute-service
  namespace: production
  annotations:
    kubernetes.io/ingress.global-static-ip-name: compute-service
    kubernetes.io/ingress.allow-http: "false"
    networking.gke.io/managed-certificates: compute-service
spec:
  rules:
    - host: 34.149.64.119
      http:
        paths:
        - path: /*
          pathType: ImplementationSpecific
          backend:
            service:
              name: compute-service
              port: 
                number: 8080

---
apiVersion: networking.gke.io/v1beta2
kind: ManagedCertificate
metadata:
  name: compute-service
  namespace: production
spec:
  domains:
    - 34.149.64.119